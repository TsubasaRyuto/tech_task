{"ast":null,"code":"var _jsxFileName = \"/src/src/App.tsx\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst query = gql`\n  {\n    aiAnalysisLogs {\n      id\n      imagePath\n      success\n      message\n      confidence\n      requestTimestamp\n      responseTimestamp\n    }\n  }\n`;\n\nconst App = () => /*#__PURE__*/_jsxDEV(Query, {\n  query: query,\n  children: [/*#__PURE__*/_jsxDEV(\"header\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this);\n    const logs = data.aiAnalysisLogs;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"content-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"image-path\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"confidence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"request-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"response-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.imagePath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.confidence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.requestTimestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.responseTimestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/src/src/App.tsx"],"names":["React","Query","gql","query","App","loading","error","data","toString","logs","aiAnalysisLogs","map","log","id","imagePath","success","message","confidence","requestTimestamp","responseTimestamp"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,YAAP;;AAEA,MAAMC,KAAK,GAAGD,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAeA,MAAME,GAAG,GAAG,mBACV,QAAC,KAAD;AAAO,EAAA,KAAK,EAAED,KAAd;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIG,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAAmC;AAClC,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA,gBAAIA,KAAK,CAACE,QAAN;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,UAAMC,IAAI,GAAGF,IAAI,CAACG,cAAlB;AACA,wBACE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAWID,IAAI,CAACE,GAAL,CAAUC,GAAD,iBACT;AAAA,gCACE;AAAA,oBAAMA,GAAG,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMD,GAAG,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMF,GAAG,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAMH,GAAG,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAMJ,GAAG,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAML,GAAG,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA,oBAAMN,GAAG,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAASP,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,cADA,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD,GAlCH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMT,G;AAuCN,eAAeA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport './App.scss';\n\nconst query = gql`\n  {\n    aiAnalysisLogs {\n      id\n      imagePath\n      success\n      message\n      confidence\n      requestTimestamp\n      responseTimestamp\n    }\n  }\n`\n\n\nconst App = () => (\n  <Query query={query}>\n    <header>\n    test\n    </header>\n    {({ loading, error, data }: any) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>{error.toString()}</p>;\n      const logs = data.aiAnalysisLogs;\n      return(\n        <table className=\"content-table\">\n          <tr>\n            <th>id</th>\n            <th>image-path</th>\n            <th>success</th>\n            <th>message</th>\n            <th>class</th>\n            <th>confidence</th>\n            <th>request-time</th>\n            <th>response-time</th>\n          </tr>\n          { logs.map((log: any) => (\n            <tr key={log.id}>\n              <td>{ log.id }</td>\n              <td>{ log.imagePath }</td>\n              <td>{ log.success }</td>\n              <td>{ log.message }</td>\n              <td></td>\n              <td>{ log.confidence }</td>\n              <td>{ log.requestTimestamp }</td>\n              <td>{ log.responseTimestamp }</td>\n            </tr>\n          ))}\n        </table>\n      )\n    }}\n  </Query>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}